"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stock-data/route";
exports.ids = ["app/api/stock-data/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstock-data%2Froute&page=%2Fapi%2Fstock-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstock-data%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstock-data%2Froute&page=%2Fapi%2Fstock-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstock-data%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_steffengottle_Desktop_Apps_Pivots_daerkle_daerkle_next_app_api_stock_data_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/stock-data/route.ts */ \"(rsc)/./app/api/stock-data/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stock-data/route\",\n        pathname: \"/api/stock-data\",\n        filename: \"route\",\n        bundlePath: \"app/api/stock-data/route\"\n    },\n    resolvedPagePath: \"/Users/steffengottle/Desktop/Apps/Pivots/daerkle/daerkle-next/app/api/stock-data/route.ts\",\n    nextConfigOutput,\n    userland: _Users_steffengottle_Desktop_Apps_Pivots_daerkle_daerkle_next_app_api_stock_data_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/stock-data/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdG9jay1kYXRhJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzdG9jay1kYXRhJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc3RvY2stZGF0YSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnN0ZWZmZW5nb3R0bGUlMkZEZXNrdG9wJTJGQXBwcyUyRlBpdm90cyUyRmRhZXJrbGUlMkZkYWVya2xlLW5leHQlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGc3RlZmZlbmdvdHRsZSUyRkRlc2t0b3AlMkZBcHBzJTJGUGl2b3RzJTJGZGFlcmtsZSUyRmRhZXJrbGUtbmV4dCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN5QztBQUN0SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhZXJrbGUtbmV4dC8/ZjQ2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc3RlZmZlbmdvdHRsZS9EZXNrdG9wL0FwcHMvUGl2b3RzL2RhZXJrbGUvZGFlcmtsZS1uZXh0L2FwcC9hcGkvc3RvY2stZGF0YS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3RvY2stZGF0YS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0b2NrLWRhdGFcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3N0b2NrLWRhdGEvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvc3RlZmZlbmdvdHRsZS9EZXNrdG9wL0FwcHMvUGl2b3RzL2RhZXJrbGUvZGFlcmtsZS1uZXh0L2FwcC9hcGkvc3RvY2stZGF0YS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zdG9jay1kYXRhL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstock-data%2Froute&page=%2Fapi%2Fstock-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstock-data%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/stock-data/route.ts":
/*!*************************************!*\
  !*** ./app/api/stock-data/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nasync function fetchStockData(symbol) {\n    try {\n        const response = await fetch(`http://localhost:8000/api/stock-data?symbol=${symbol}&timeframe=1d`);\n        if (!response.ok) throw new Error(\"Failed to fetch stock data\");\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching stock data:\", error);\n        return null;\n    }\n}\nfunction calculatePivots(data) {\n    const high = data[data.length - 1].high;\n    const low = data[data.length - 1].low;\n    const close = data[data.length - 1].close;\n    const pp = (high + low + close) / 3;\n    const r1 = 2 * pp - low;\n    const r2 = pp + (high - low);\n    const r3 = high + 2 * (pp - low);\n    const s1 = 2 * pp - high;\n    const s2 = pp - (high - low);\n    const s3 = low - 2 * (high - pp);\n    return {\n        pp,\n        r1,\n        r2,\n        r3,\n        s1,\n        s2,\n        s3\n    };\n}\nfunction calculateVolumeBuzz(data) {\n    const last20Days = data.slice(-21, -1);\n    const avgVolume = last20Days.reduce((sum, day)=>sum + day.volume, 0) / 20;\n    const currentVolume = data[data.length - 1].volume;\n    return currentVolume / avgVolume * 100 - 100;\n}\nfunction detectCluster(pivots, price, tolerance) {\n    const allLevels = pivots.flatMap((p)=>[\n            p.pp,\n            p.r1,\n            p.r2,\n            p.s1,\n            p.s2\n        ]);\n    const nearbyLevels = allLevels.filter((level)=>Math.abs(price - level) <= tolerance);\n    return nearbyLevels.length >= 2;\n}\nfunction countTests(data, level, tolerance) {\n    let tests = 0;\n    for(let i = data.length - 10; i < data.length; i++){\n        if (Math.abs(data[i].high - level) <= tolerance || Math.abs(data[i].low - level) <= tolerance) {\n            tests++;\n        }\n    }\n    return tests;\n}\nfunction detectDivergence(data) {\n    // Vereinfachte RSI-Divergenz-Erkennung\n    const rsiPeriod = 14;\n    const lastRSI = calculateRSI(data.slice(-rsiPeriod));\n    const prevRSI = calculateRSI(data.slice(-rsiPeriod * 2, -rsiPeriod));\n    const priceChange = data[data.length - 1].close - data[data.length - rsiPeriod].close;\n    return lastRSI > prevRSI && priceChange < 0 || lastRSI < prevRSI && priceChange > 0;\n}\nfunction calculateRSI(data) {\n    let gains = 0, losses = 0;\n    for(let i = 1; i < data.length; i++){\n        const change = data[i].close - data[i - 1].close;\n        if (change >= 0) gains += change;\n        else losses -= change;\n    }\n    const avgGain = gains / data.length;\n    const avgLoss = losses / data.length;\n    const rs = avgGain / avgLoss;\n    return 100 - 100 / (1 + rs);\n}\nfunction determineQuality(setup) {\n    const { rr, probability, volumeBuzz, cluster, repeatedTests } = setup;\n    if (rr >= 1.5 && probability >= 60 && volumeBuzz >= 50 && cluster && repeatedTests >= 3) {\n        return \"A+\";\n    }\n    if (rr >= 1.3 && probability >= 55 && volumeBuzz >= 30 && (cluster || repeatedTests >= 2)) {\n        return \"A\";\n    }\n    if (rr >= 1.2 && probability >= 50 && volumeBuzz >= 20) {\n        return \"B\";\n    }\n    return \"avoid\";\n}\nfunction analyzePivotSetups(data, pivots, timeframe) {\n    const setups = [];\n    const lastBar = data[data.length - 1];\n    const price = lastBar.close;\n    const tolerance = price * 0.005; // 0.5% Toleranz\n    const volumeBuzz = calculateVolumeBuzz(data);\n    const hasCluster = detectCluster(pivots, price, tolerance);\n    // Trend-Bestimmung\n    const trendDirection = determineTrend(data, pivots[0].pp);\n    // 1. Pivot Point Bounce (Long)\n    for (const pivot of pivots){\n        const supportLevels = [\n            pivot.s1,\n            pivot.s2,\n            pivot.s3\n        ];\n        for (const level of supportLevels){\n            if (Math.abs(price - level) <= tolerance) {\n                const volumeIncreasing = checkVolumeIncrease(data);\n                const hasReversal = checkReversalCandle(data);\n                if (volumeIncreasing && hasReversal) {\n                    const stopLoss = Math.min(price * 0.99, level - price * 0.005);\n                    const target = pivot.r1;\n                    const rr = Math.abs((target - price) / (price - stopLoss));\n                    const tests = countTests(data, level, tolerance);\n                    const hasDivergence = detectDivergence(data);\n                    const setup = {\n                        type: \"long\",\n                        subType: \"pivot_bounce\",\n                        timeframe,\n                        entry: price,\n                        target,\n                        stopLoss,\n                        trailingStop: price + (price - stopLoss),\n                        rr,\n                        probability: calculateProbability(data, \"long\", level),\n                        volumeBuzz,\n                        pivotLevel: `S${supportLevels.indexOf(level) + 1}`,\n                        quality: \"avoid\",\n                        reason: \"Pivot Point Bounce\",\n                        bestTime: determineBestTime(data, \"long\"),\n                        cluster: hasCluster,\n                        divergence: hasDivergence,\n                        repeatedTests: tests,\n                        additionalTargets: [\n                            pivot.r2,\n                            pivot.r3\n                        ],\n                        trendDirection,\n                        confirmations: {\n                            volume: volumeIncreasing,\n                            reversal: hasReversal,\n                            trend: trendDirection === \"up\"\n                        }\n                    };\n                    setup.quality = determineQuality(setup);\n                    if (setup.quality !== \"avoid\") {\n                        setups.push(setup);\n                    }\n                }\n            }\n        }\n    }\n    // 2. Resistance Breakout\n    for (const pivot of pivots){\n        const resistanceLevels = [\n            pivot.r1,\n            pivot.r2\n        ];\n        for (const level of resistanceLevels){\n            if (price > level && Math.abs(price - level) <= tolerance * 2) {\n                const priceChange = (price - data[data.length - 2].close) / data[data.length - 2].close * 100;\n                const volumeHigh = volumeBuzz >= 20;\n                if (priceChange <= 2 && volumeHigh) {\n                    const stopLoss = level * 0.995; // Knapp unter dem durchbrochenen Level\n                    const target = level === pivot.r1 ? pivot.r2 : pivot.r3;\n                    const rr = Math.abs((target - price) / (price - stopLoss));\n                    const setup = {\n                        type: \"long\",\n                        subType: \"breakout\",\n                        timeframe,\n                        entry: price,\n                        target,\n                        stopLoss,\n                        trailingStop: price + (price - stopLoss),\n                        rr,\n                        probability: calculateProbability(data, \"long\", level),\n                        volumeBuzz,\n                        pivotLevel: level === pivot.r1 ? \"R1\" : \"R2\",\n                        quality: \"avoid\",\n                        reason: \"Resistance Breakout\",\n                        bestTime: determineBestTime(data, \"long\"),\n                        cluster: hasCluster,\n                        divergence: false,\n                        repeatedTests: countTests(data, level, tolerance),\n                        additionalTargets: [\n                            level === pivot.r1 ? pivot.r3 : null\n                        ].filter(Boolean),\n                        trendDirection,\n                        confirmations: {\n                            volume: volumeHigh,\n                            priceAction: priceChange <= 2,\n                            trend: trendDirection === \"up\"\n                        }\n                    };\n                    setup.quality = determineQuality(setup);\n                    if (setup.quality !== \"avoid\") {\n                        setups.push(setup);\n                    }\n                }\n            }\n        }\n    }\n    // 3. Support Confirmation\n    for (const pivot of pivots){\n        const supportLevels = [\n            pivot.s1,\n            pivot.s2\n        ];\n        for (const level of supportLevels){\n            const tests = countTests(data, level, tolerance);\n            if (tests >= 2 && checkRisingLows(data, level)) {\n                const stopLoss = level * 0.99;\n                const target = pivot.r1;\n                const rr = Math.abs((target - price) / (price - stopLoss));\n                const setup = {\n                    type: \"long\",\n                    subType: \"support_confirmation\",\n                    timeframe,\n                    entry: price,\n                    target,\n                    stopLoss,\n                    trailingStop: price + (price - stopLoss),\n                    rr,\n                    probability: calculateProbability(data, \"long\", level),\n                    volumeBuzz,\n                    pivotLevel: level === pivot.s1 ? \"S1\" : \"S2\",\n                    quality: \"avoid\",\n                    reason: \"Support Confirmation\",\n                    bestTime: determineBestTime(data, \"long\"),\n                    cluster: hasCluster,\n                    divergence: detectDivergence(data),\n                    repeatedTests: tests,\n                    additionalTargets: [\n                        pivot.r2\n                    ],\n                    trendDirection,\n                    confirmations: {\n                        risingLows: true,\n                        multipleTests: tests >= 2,\n                        trend: trendDirection === \"up\"\n                    }\n                };\n                setup.quality = determineQuality(setup);\n                if (setup.quality !== \"avoid\") {\n                    setups.push(setup);\n                }\n            }\n        }\n    }\n    // Short Setups analog zu den Long Setups implementieren...\n    // (Resistance Rejection, Support Breakdown, Resistance Failure)\n    return setups;\n}\nfunction checkVolumeIncrease(data) {\n    const recentVolumes = data.slice(-5).map((d)=>d.volume);\n    return recentVolumes[recentVolumes.length - 1] > recentVolumes[recentVolumes.length - 2];\n}\nfunction checkReversalCandle(data) {\n    const lastCandle = data[data.length - 1];\n    const bodySize = Math.abs(lastCandle.close - lastCandle.open);\n    const upperWick = lastCandle.high - Math.max(lastCandle.open, lastCandle.close);\n    const lowerWick = Math.min(lastCandle.open, lastCandle.close) - lastCandle.low;\n    // Hammer oder Shooting Star\n    return lowerWick > bodySize * 2 || upperWick > bodySize * 2;\n}\nfunction checkRisingLows(data, level) {\n    const relevantData = data.slice(-10);\n    let lastLow = -Infinity;\n    let risingLows = true;\n    for (const bar of relevantData){\n        if (Math.abs(bar.low - level) <= level * 0.005) {\n            if (bar.low <= lastLow) {\n                risingLows = false;\n                break;\n            }\n            lastLow = bar.low;\n        }\n    }\n    return risingLows;\n}\nfunction determineTrend(data, pp) {\n    const ma20 = calculateMA(data, 20);\n    const lastClose = data[data.length - 1].close;\n    if (lastClose > ma20 && lastClose > pp) return \"up\";\n    if (lastClose < ma20 && lastClose < pp) return \"down\";\n    return \"sideways\";\n}\nfunction calculateMA(data, period) {\n    const prices = data.slice(-period).map((d)=>d.close);\n    return prices.reduce((sum, price)=>sum + price, 0) / period;\n}\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const symbol = searchParams.get(\"symbol\");\n    const timeframe = searchParams.get(\"timeframe\") || \"1d\";\n    if (!symbol) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Symbol is required\"\n        }, {\n            status: 400\n        });\n    }\n    try {\n        const data = await fetchStockData(symbol);\n        if (!data || data.length < 2) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to fetch stock data\"\n            }, {\n                status: 500\n            });\n        }\n        const currentBar = data[data.length - 1];\n        const previousBar = data[data.length - 2];\n        const volumeBuzz = calculateVolumeBuzz(data);\n        // Calculate percentage change\n        const change = (currentBar.close - previousBar.close) / previousBar.close * 100;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            price: currentBar.close,\n            change: change,\n            volume: currentBar.volume,\n            volumeBuzz: volumeBuzz,\n            symbol: symbol,\n            name: symbol // Using symbol as name since we don't have company names\n        });\n    } catch (error) {\n        console.error(\"Error fetching stock data:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch stock data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/stock-data/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstock-data%2Froute&page=%2Fapi%2Fstock-data%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstock-data%2Froute.ts&appDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsteffengottle%2FDesktop%2FApps%2FPivots%2Fdaerkle%2Fdaerkle-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();